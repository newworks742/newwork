{"version":3,"file":"hooks.server-DCt8X1J8.js","sources":["../../../node_modules/@sveltejs/kit/src/exports/hooks/sequence.js","../../../.svelte-kit/adapter-node/chunks/hooks.server.js"],"sourcesContent":["/** @import { Handle, RequestEvent, ResolveOptions } from '@sveltejs/kit' */\n/** @import { MaybePromise } from 'types' */\nimport {\n\tmerge_tracing,\n\tget_request_store,\n\twith_request_store\n} from '@sveltejs/kit/internal/server';\n\n/**\n * A helper function for sequencing multiple `handle` calls in a middleware-like manner.\n * The behavior for the `handle` options is as follows:\n * - `transformPageChunk` is applied in reverse order and merged\n * - `preload` is applied in forward order, the first option \"wins\" and no `preload` options after it are called\n * - `filterSerializedResponseHeaders` behaves the same as `preload`\n *\n * ```js\n * /// file: src/hooks.server.js\n * import { sequence } from '@sveltejs/kit/hooks';\n *\n * /// type: import('@sveltejs/kit').Handle\n * async function first({ event, resolve }) {\n * \tconsole.log('first pre-processing');\n * \tconst result = await resolve(event, {\n * \t\ttransformPageChunk: ({ html }) => {\n * \t\t\t// transforms are applied in reverse order\n * \t\t\tconsole.log('first transform');\n * \t\t\treturn html;\n * \t\t},\n * \t\tpreload: () => {\n * \t\t\t// this one wins as it's the first defined in the chain\n * \t\t\tconsole.log('first preload');\n * \t\t\treturn true;\n * \t\t}\n * \t});\n * \tconsole.log('first post-processing');\n * \treturn result;\n * }\n *\n * /// type: import('@sveltejs/kit').Handle\n * async function second({ event, resolve }) {\n * \tconsole.log('second pre-processing');\n * \tconst result = await resolve(event, {\n * \t\ttransformPageChunk: ({ html }) => {\n * \t\t\tconsole.log('second transform');\n * \t\t\treturn html;\n * \t\t},\n * \t\tpreload: () => {\n * \t\t\tconsole.log('second preload');\n * \t\t\treturn true;\n * \t\t},\n * \t\tfilterSerializedResponseHeaders: () => {\n * \t\t\t// this one wins as it's the first defined in the chain\n * \t\t\tconsole.log('second filterSerializedResponseHeaders');\n * \t\t\treturn true;\n * \t\t}\n * \t});\n * \tconsole.log('second post-processing');\n * \treturn result;\n * }\n *\n * export const handle = sequence(first, second);\n * ```\n *\n * The example above would print:\n *\n * ```\n * first pre-processing\n * first preload\n * second pre-processing\n * second filterSerializedResponseHeaders\n * second transform\n * first transform\n * second post-processing\n * first post-processing\n * ```\n *\n * @param {...Handle} handlers The chain of `handle` functions\n * @returns {Handle}\n */\nexport function sequence(...handlers) {\n\tconst length = handlers.length;\n\tif (!length) return ({ event, resolve }) => resolve(event);\n\n\treturn ({ event, resolve }) => {\n\t\tconst { state } = get_request_store();\n\t\treturn apply_handle(0, event, {});\n\n\t\t/**\n\t\t * @param {number} i\n\t\t * @param {RequestEvent} event\n\t\t * @param {ResolveOptions | undefined} parent_options\n\t\t * @returns {MaybePromise<Response>}\n\t\t */\n\t\tfunction apply_handle(i, event, parent_options) {\n\t\t\tconst handle = handlers[i];\n\n\t\t\treturn state.tracing.record_span({\n\t\t\t\tname: `sveltekit.handle.sequenced.${handle.name ? handle.name : i}`,\n\t\t\t\tattributes: {},\n\t\t\t\tfn: async (current) => {\n\t\t\t\t\tconst traced_event = merge_tracing(event, current);\n\t\t\t\t\treturn await with_request_store({ event: traced_event, state }, () =>\n\t\t\t\t\t\thandle({\n\t\t\t\t\t\t\tevent: traced_event,\n\t\t\t\t\t\t\tresolve: (event, options) => {\n\t\t\t\t\t\t\t\t/** @type {ResolveOptions['transformPageChunk']} */\n\t\t\t\t\t\t\t\tconst transformPageChunk = async ({ html, done }) => {\n\t\t\t\t\t\t\t\t\tif (options?.transformPageChunk) {\n\t\t\t\t\t\t\t\t\t\thtml = (await options.transformPageChunk({ html, done })) ?? '';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (parent_options?.transformPageChunk) {\n\t\t\t\t\t\t\t\t\t\thtml = (await parent_options.transformPageChunk({ html, done })) ?? '';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn html;\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t/** @type {ResolveOptions['filterSerializedResponseHeaders']} */\n\t\t\t\t\t\t\t\tconst filterSerializedResponseHeaders =\n\t\t\t\t\t\t\t\t\tparent_options?.filterSerializedResponseHeaders ??\n\t\t\t\t\t\t\t\t\toptions?.filterSerializedResponseHeaders;\n\n\t\t\t\t\t\t\t\t/** @type {ResolveOptions['preload']} */\n\t\t\t\t\t\t\t\tconst preload = parent_options?.preload ?? options?.preload;\n\n\t\t\t\t\t\t\t\treturn i < length - 1\n\t\t\t\t\t\t\t\t\t? apply_handle(i + 1, event, {\n\t\t\t\t\t\t\t\t\t\t\ttransformPageChunk,\n\t\t\t\t\t\t\t\t\t\t\tfilterSerializedResponseHeaders,\n\t\t\t\t\t\t\t\t\t\t\tpreload\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t: resolve(event, {\n\t\t\t\t\t\t\t\t\t\t\ttransformPageChunk,\n\t\t\t\t\t\t\t\t\t\t\tfilterSerializedResponseHeaders,\n\t\t\t\t\t\t\t\t\t\t\tpreload\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","import mongoose from \"mongoose\";\nimport { sequence } from \"@sveltejs/kit/hooks\";\nlet isConnected = false;\nconst MONGODB_URI = `mongodb+srv://bhavana:kkt13TqY5QYiTgPe@cluster0.2pqyzxs.mongodb.net/`;\nconst main = async ({ event, resolve }) => {\n  if (!isConnected) {\n    try {\n      await mongoose.connect(MONGODB_URI);\n      isConnected = true;\n      console.log(\"Connected to MongoDB\");\n    } catch (error) {\n      console.error(\"Error connecting to MongoDB:\", error);\n      throw new Error(\"Failed to connect to the database\");\n    }\n  }\n  event.cookies.get(\"auth_session\") || null;\n  let user = null;\n  let session = null;\n  event.locals.user = user;\n  event.locals.session = session;\n  event.url.pathname;\n  if (event.locals.user) {\n    event.locals.authedUser = {\n      id: event.locals.user?.userId,\n      email: event.locals.user?.email,\n      username: event.locals.user?.username\n    };\n  }\n  const response = await resolve(event);\n  return response;\n};\nasync function handleError({ error, event, status, message }) {\n  const errorId = crypto.randomUUID();\n  const isNotFound = !event.route.id && event.url.pathname !== \"/\";\n  return {\n    message: error?.message || \"Whoops !\",\n    status: isNotFound ? 404 : error?.status || 500,\n    errorId\n  };\n}\nconst handle = sequence(main);\nexport {\n  handle,\n  handleError,\n  main\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}