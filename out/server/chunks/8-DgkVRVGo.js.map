{"version":3,"file":"8-DgkVRVGo.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/contactus/_page.server.js","../../../.svelte-kit/adapter-node/nodes/8.js"],"sourcesContent":["import { j as contactUs } from \"../../../chunks/mongoActions.js\";\nconst actions = {\n  contactus: async ({ request }, event) => {\n    try {\n      const rawData = Object.fromEntries(await request.formData());\n      const body = rawData;\n      console.log(\"body\", body);\n      await contactUs(body);\n      return {\n        type: \"success\",\n        data: {\n          message: \"Contact details submitted successfully!\"\n        }\n      };\n    } catch (error) {\n      console.error(\"Error creating contact:\", error);\n      return {\n        type: \"error\",\n        data: {\n          error: \"Error submitting your data. Please try again later!\"\n        }\n      };\n    }\n  }\n  // verifyemail: async ({ request }) => {\n  //   const rawData = Object.fromEntries(await request.formData());\n  //   // console.log(rawData, \"rawData\");\n  //   const email = rawData.email;\n  //   // console.log('Received email:', email);\n  //   if (!email) {\n  //     console.log('No email provided in the request.');\n  //     return {\n  //       status: 500,\n  //       message: 'Please provide a valid email address',\n  //       success: false,\n  //       isEmailVerified: false\n  //     };\n  //   }\n  //   try {\n  //     const tokenVerificationRecord = await TokenVerification.findOne({ email });\n  //     // console.log('TokenVerification record:', tokenVerificationRecord);\n  //     if (tokenVerificationRecord && tokenVerificationRecord.isEmailVerified) {\n  //       console.log('Email is already verified in TokenVerification.');\n  //       return {\n  //         status: 200,\n  //         message: 'Email is already verified',\n  //         success: true,\n  //         isEmailVerified: true\n  //       };\n  //     }\n  //     const user = await Profile.findOne({ email });\n  //     // console.log('Profile record:', user);\n  //     if (!user) {\n  //       const result = await sendemailOtp(email);\n  //       if (result) {\n  //         return {\n  //           status: 200,\n  //           message: 'Verification email sent successfully. Please check your inbox.',\n  //           success: true,\n  //           isEmailVerified: false\n  //         };\n  //       } else {\n  //         throw new Error('Email sending failed');\n  //       }\n  //     }\n  //     if (!user.isEmailVerified) {\n  //       const result = await sendemailOtp(email);\n  //       if (result) {\n  //         return {\n  //           status: 200,\n  //           message: 'Verification email sent successfully. Please check your inbox.',\n  //           success: true,\n  //           isEmailVerified: false\n  //         };\n  //       } else {\n  //         throw new Error('Email sending failed');\n  //       }\n  //     }\n  //     return {\n  //       status: 200,\n  //       message: 'User already exists and email is verified.',\n  //       success: true,\n  //       isEmailVerified: true\n  //     };\n  //   } catch (error) {\n  //     return {\n  //       status: 500,\n  //       message: 'Verification mail could not be sent. Double-Check your email again',\n  //       success: false,\n  //       isEmailVerified: false\n  //     };\n  //   }\n  // },\n  // verifyOtpEmail: async ({ request }) => {\n  //   const body = Object.fromEntries(await request.formData());\n  //   console.log('verifyOtp body', body);\n  //   const { email, enteredOtp } = body;\n  //   try {\n  //     if (!email || !enteredOtp) {\n  //       return {\n  //         status: 500,\n  //         message: 'Please provide both email and OTP to verify.',\n  //         success: false,\n  //         isEmailVerified: false\n  //       };\n  //     }\n  //     const verificationResult = await verifyemailOtp(email, enteredOtp);\n  //     if (!verificationResult.success) {\n  //       return {\n  //         status: 500,\n  //         message: verificationResult.message,\n  //         success: false,\n  //         isEmailVerified: false\n  //       };\n  //     } else {\n  //       return {\n  //         status: 200,\n  //         message: verificationResult.message,\n  //         success: true,\n  //         isEmailVerified: true\n  //       };\n  //     }\n  //   } catch (error) {\n  //     //   console.error(\"Error in verifyOtp handler:\", error);\n  //     return {\n  //       status: 500,\n  //       message: 'An unexpected error occurred while verifying the OTP. Please try again later.',\n  //       success: false,\n  //       isEmailVerified: false\n  //     };\n  //   }\n  // },\n};\nexport {\n  actions\n};\n","import * as server from '../entries/pages/contactus/_page.server.js';\n\nexport const index = 8;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/contactus/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/contactus/+page.server.js\";\nexport const imports = [\"_app/immutable/nodes/8.CuRd6gJQ.js\",\"_app/immutable/chunks/1w2tVRpE.js\",\"_app/immutable/chunks/IHki7fMi.js\",\"_app/immutable/chunks/ITkS-TNF.js\",\"_app/immutable/chunks/BtG5aEW1.js\",\"_app/immutable/chunks/CzG5mwcR.js\",\"_app/immutable/chunks/B5PH7vek.js\",\"_app/immutable/chunks/BoqYbZC7.js\",\"_app/immutable/chunks/B1gt4VIs.js\"];\nexport const stylesheets = [\"_app/immutable/assets/Toaster.DQwrSZtH.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":";;;;AACA,MAAM,OAAO,GAAG;AAChB,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,KAAK,KAAK;AAC3C,IAAI,IAAI;AACR,MAAM,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,OAAO,CAAC,QAAQ,EAAE,CAAC;AAClE,MAAM,MAAM,IAAI,GAAG,OAAO;AAC1B,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AAC/B,MAAM,MAAM,SAAS,CAAC,IAAI,CAAC;AAC3B,MAAM,OAAO;AACb,QAAQ,IAAI,EAAE,SAAS;AACvB,QAAQ,IAAI,EAAE;AACd,UAAU,OAAO,EAAE;AACnB;AACA,OAAO;AACP,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC;AACrD,MAAM,OAAO;AACb,QAAQ,IAAI,EAAE,OAAO;AACrB,QAAQ,IAAI,EAAE;AACd,UAAU,KAAK,EAAE;AACjB;AACA,OAAO;AACP,IAAI;AACJ,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AClIW,MAAC,KAAK,GAAG;AACrB,IAAI,eAAe;AACP,MAAC,SAAS,GAAG,YAAY,eAAe,KAAK,CAAC,MAAM,OAAO,4BAA4C,CAAC,EAAE;AAE1G,MAAC,SAAS,GAAG;AACb,MAAC,OAAO,GAAG,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC,CAAC,mCAAmC;AAChV,MAAC,WAAW,GAAG,CAAC,4CAA4C;AAC5D,MAAC,KAAK,GAAG;;;;"}